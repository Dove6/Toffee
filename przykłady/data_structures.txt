// listy
init typicalList = [1, 2, "trzy", false, null];
print(typicalList[0]);  // wypisanie 1
print(typicalList[100]);  // bÅ‚Ä…d
typicalList[0] = 0.5;
print(typicalList[0]);  // wypisanie 0.5
init const anotherList = ["a", "b", "c"];
anotherList[0] = 15;  // OK - niemutowalna zmienna =/= niemutowalna struktura danych
anotherList = [1, 2, 3];  // bÅ‚Ä…d!

// krotki - podobne do list, ale niemutowalne
init typicalTuple = (1, 2, "trzy", false, null);
print(typicalTuple[0]);  // wypisanie 1
print(typicalTuple[100]);  // bÅ‚Ä…d
typicalTuple[0] = 0.5;  // bÅ‚Ä…d!
typicalTuple = ["a", "b", "c"];  // OK - inna "instancja" krotki

// sÅ‚owniki (mutowalne)
init dateTime = {"year": 2022, "month": 4, "day": 4, "hour": 8, "minute": 0, "second": 0};
print(dateTime{"month"});  // 4 - dostÄ™p po kluczu tekstowym
print(dateTime[0]);  // 2022 - dostÄ™p po indeksie liczbowym
print(dateTime[0] = 2023);  // 2023 (przypisanie zostaÅ‚o wykonane)

// rekordy - krotki z nazwanymi polami (niemutowalne)
init countryInfo = <"name": "Poland", "flag": "ðŸ‡µðŸ‡±", "language": "Polish">;
print(countryInfo{"name"});  // Poland - dostÄ™p po kluczu tekstowym
print(countryInfo[2]);  // Polish - dostÄ™p po indeksie liczbowym
print(countryInfo[0] = "Indonesia");  // bÅ‚Ä…d!
